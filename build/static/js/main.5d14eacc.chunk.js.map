{"version":3,"sources":["components/Navbar/Navbar.js","components/Cv/Cv.js","components/Letter/Letter.js","components/Cover/Cover.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","href","React","Component","Cv","src","alt","class","Letter","name","onChange","this","props","handleChange","value","for","placeholder","list","msr","company","Cover","state","show","bind","changeName","newName","setState","evt","target","Home","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d14eacc.chunk.js","sourcesContent":["import React from 'react';\nimport './navbar.css';\nimport { Link } from 'react-router-dom';\n\nexport class Navbar extends React.Component{\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav\">\n            <Link to='/Cv'>\n            <li className=\"nav-item nav-link\">\n              Resume\n            </li>\n            </Link>\n            <Link to='/Cover'>\n            <li className=\"nav-item nav-link\">\n            Cover Letter\n            </li>\n            </Link>\n            <li className=\"nav-item download\">\n              <a className=\"nav-link\" href=\"./ZsuzsaLukacsCV.pdf\">DOWNLOAD in PDF</a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n","import React from 'react';\nimport './cv.css';\n\nexport class Cv extends React.Component{\n  render() {\n    return (\n      <div className = \"container\">\n    <main  className = \"row\">\n        <div className=\"col grey me\">\n        <img id='self' src=\"./img/en.jpg\" alt=\"Zsuzsa Lukacs\" />\n        <br/>\n        <h1>Zsuzsa Lukács</h1>\n        <br/>\n\n\n        <img className=\"contact\" src=\"./img/phone.png\" alt=\"phone\"/>\n        <a href=\"tel:+4915214011940\">+4915214011940</a>\n        <br/>\n        <img className=\"contact\" src=\"./img/email.png\" alt=\"email\"/>\n      \twebdev.zsuzsa@gmail.com\n        <br/>\n        <a href=\"  http://www.linkedin.com/in/zsuzsa-lukacs\"><img class=\"contact\" src=\"img/linkedin.png\" alt=\"linkedin\"/> LinkedIn</a>\n        <br/>\n        <a href=\"https://github.com/zsuzsamano\"> <img class=\"contact\" src=\"img/git.png\" alt=\"github\"/> GitHub </a>\n\n\n      </div>\n      <div className=\"col grey\">\n\n        <h3>Education</h3>\n        <h5>Eötvös Loránd University</h5>\n        <h6>Applied Mathematics</h6>\n        <br/>\n\n        <h5><a href=\"https://www.codecademy.com/profiles/Zsuzsa_Mano\">Codecademy</a></h5>\n        <h6>Web Development</h6>\n\n        <br/>\n        <h5>edX</h5>\n        <h6>CS50W</h6>\n\n        <br/>\n\n        <h3>Skills</h3>\n        <ul>\n          <li>HTML 5</li>\n          <li>CSS 3 / Sass </li>\n          <li>Bootstrap 4</li>\n          <li>JavaScript ES8</li>\n          <li>Handlebars.js</li>\n          <li>React</li>\n          <li>Git</li>\n          <li>Command Line</li>\n        </ul>\n\n      </div>\n      <div className=\"col third grey\">\n        <h3>Projects</h3>\n        <ul>\n          <li> <a href=\"http://www.szbd.hu/static\">szbd.hu</a> </li>\n          <li>...</li>\n        </ul>\n\n        <h3>I'm working with</h3>\n        <ul>\n          <li>Atom</li>\n          <li>GitHub</li>\n          <li>Linux</li>\n          <li>Gimp</li>\n\n        </ul>\n\n        <h3>Languages</h3>\n        <ul>\n          <li>English</li>\n          <li>Spanish</li>\n          <li>Hungarian</li>\n          <li>German</li>\n          <li>Italian</li>\n        </ul>\n\n\n\n\n      </div>\n    </main>\n    </div>\n\n)\n  }\n}\n","import React from 'react';\nimport './letter.css';\nimport { Link } from 'react-router-dom';\n\nexport class Letter extends React.Component{\n  render() {\n    return (\n      <main className='container'>\n          <select name = 'msr'\n          onChange={this.props.handleChange}>\n          <option value=''> </option>\n          <option value='Mr'> Mr</option>\n          <option value='Ms'> Ms</option>\n          <option value='Mrs'> Mrs</option>\n          </select>\n\n          <label for=\"dear\"></label>\n          <input type=\"text\" name=\"name\" placeholder=\"your name\"\n          onChange={this.props.handleChange}/>\n          <br/>\n\n          <input name='company' list=\"company\" placeholder=\"company\"\n          onChange={this.props.handleChange}/>\n          <datalist id=\"company\">\n          <option value=\"Accenture\"/>\n          </datalist>\n          <br/>\n          <button>Submit</button>\n\n\n\n        <div id='formalLetter' className=\"letter grey\">\n          Dear {this.props.msr} {this.props.name},\n\n          <br/>\n          I would like to apply for the job posted on your website as a web developer.\n          As you'll see, I have hands-on experience efficiently coding websites using HTML, CSS,\n          and JavaScript.\n          <br/>\n          At the moment I'm running a small business with few employees, I built a system to keep track of\n           stock and customer choices, and by now, it mostly runs by itself.\n           <br/>\n           Looking for something new to learn, I found Web Development, and it became my true passion.\n           I did websites for NGOs, and friends, some I mention in my CV between my projects.\n           I'm a fast learner, always eager to know more.\n    <br/>\n    I am confident I would be an\n      excellent addition to {this.props.company} . In addition to my knowledge base,\n       I actively seek out\n       new technologies and stay up-to-date on industry trends and advancements.\n           <br/>\n           You can see on <Link to='/Cv'>my resume </Link>\n                 detailing my skills, along with links\n                to websites I’ve had the honor of working on.\n                <br/>\n\n           <br/>\n           You can find my <Link to='/Cv'> contact here.\n           </Link>\n\n         </div>\n\n\n\n\n\n\n      </main>\n    );\n  }\n}\n","import React from 'react';\nimport {Letter} from '../Letter/Letter';\nimport './cover.css';\n\nexport class Cover extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = { msr: '',\n                  name: 'Human Resources Manager',\n                  company: 'company',\n                  show: false,\n               };\n    this.handleChange = this.handleChange.bind(this);\n    this.changeName = this.changeName.bind(this);\n  }\n\n  changeName(newName) {\n    this.setState({ name: newName });\n    }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.name]: evt.target.value });\n  }\n\n  render() {\n    return <Letter name={this.state.name}\n                   msr={this.state.msr}\n                   company = {this.state.company}\n                   handleChange={this.handleChange}\n                   />;\n\n  }\n}\n","import React from 'react';\nimport { Navbar } from './components/Navbar/Navbar';\nimport { Cv } from './components/Cv/Cv';\nimport { Cover } from './components/Cover/Cover';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n\n<Navbar/>\n<Switch>\n<Route path='/' exact component= {Home}/>\n<Route path='/Cv' component={Cv}/>\n<Route path='/Cover' component={Cover}/>\n</Switch>\n        </div>\n          </Router>\n  );\n}\n\nconst Home = () =>(\n  <div className = 'home container'>\n  <Link to='/Cv'>\n  <div className='row'>\n  <div className='button col'>\n  <div className='line'></div>\n  <div className='line'></div>\n  <div className='line'></div>\n  <div className='line'></div>\n  <div className='line'></div>\n  <div className='line'></div>\n    <p>My name is Zsuzsa Lukács\n    <br/>\n     I'm a Web Developer</p>\n</div>\n  </div>\n  </Link>\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}